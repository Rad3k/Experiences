<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAQWAAAAABoCgAAFgAAACgAAABAAAAAgAAAAAEABAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AABmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmRAJmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
        mZmZmZmZmZmZkQmZmZmZmZmZmZmZGZmZmZmRAHEQmZmZmZmZmZmZmZmZGZmZmZmZmZmZmZmTMRERAQAA
        cBAQGZmZmZmZmZmZmZkZmZmZmZmZmZmZmZl3cxM3ADMDcAERCZmZmZmZmZmZmZmZmZmZmZmZmZmZEAAH
        AANwAAAHEAAREZmZmZmZmZmZmZmZmZmZmZmZmRBwAAAIcABwAAAAAAAJmZmZmZmZmZmZmZmZmZmZmZGQ
        AABwAAcDczEAcwAAAJmZmZmZmZmZmZmZmZmZmZmZkAAABwAA+IAzN3MHd4AAAACZmZmZmZmZmZmZmZmZ
        mZkABwEQAHdwePcAdzEwAHd3cZmZmZmZmZmZmZmZmZmZAAdwcAB3N3cAd4gAh4AAADAAAZmZmZmZmZGZ
        mZmZmRkAgDcAAYAHB4+IB/E/CAAHMDd3mZmZmZmZcRmZmZmZAHBwABiHhzf3eZmZl5mB8HB3d3ABmZmZ
        kRlxEZmZmZEAiAcBmP95kRERmZmZmZmZF3NzB4iJmZkRGXEREZmZEDBwB5mZmZmZmZmZmZmZmZmTlwh3
        AAGZkRERcRERGZEAdwB5mZmZmZmZmZmZmZmZmZmREwd3ABkRERFxEREREABzAJmZmZmZmZmZmZmZmZmZ
        mZmRB3B4gREREXEREREAcHAHmZmZmZmZmZmZmZmZmZmZmZkQdwABERERcREREQB3AHmZmZmZmZmZmZmZ
        mZmZmZmZmZcHdwERERFxERERAHAHGZmZmZmZmZmZmZmZmZmZmZmZEQBwiDERF3ERERAwAAMRGZmZmZmZ
        mZmZmZmZmZmZkRERMH8AEREXcRERAHCAARERERmZmZmZmZmZmZmZkRERERETA/AREReBEREQcIARERER
        ERERERERERERERERERERERcHN4ERF4ERERcHcBEREREREREREREREREREREREREREQBwBxEXgRERBw8H
        ERERERERERERERERERERERERERERMAgAEReBEREDBwEREREREREREREREREREREREREREREQc4ARF4ER
        ETAAcxEREXiIiHERGIgREREREReIiIcRERADN3EXgRFwAIBxEREYd3iHeHEYeBERERERh3d3d3EREABw
        EReBERcDCHERERiHEReIgRiIERERERiIhxGIcRERAHcBF4ERcABzABERFxEREYiBGIgRERERGIgRERER
        ERAAAxEXgREXcIAAERERERF4iIEYiIiIcRF4iBEREREREAAAEReBExAHCAABEREYiIiIgRiIiIiIEYiH
        ERERERERBwABF4EREQCHAAEREYiIiIgRGIgRGIhxiIcRERERERAIBwEXgREDABAAAREXiIhxEREYiBEX
        iIF4iBERERERAAcQAReBEXAAcAARERiIcRERcRiIEReIgRiIEREXcTB3B3AAF4ERB3NwABERF4iBEXiB
        GIgReIhxGIiHEYhxEXAHcwAHgQEHdwcAETERh3iId4EYd3d3eBERh3eHd3ERcQdwAAfxAAAHAXcAcREX
        iIiIERiIiIhxEREXiIiHEREwBwAAB/ETAAdwAAMBEREREREREREREREREREREREREQAHAAc38RF3AHAA
        MAEREREREREREREREREREREREREXA3EBcRfxh3NwMwcQeBEREREREREREREREREREREREXcAcAAxF/ER
        AAcAdwhwARERERERERERERERERERERERBwBwAAEX8RF38wOAcwAAERERERERERERERERERERERFxAAAD
        ARfxF3A3B3AweIAREREREREREREREREREREREQcAd4ARF/ERAAA3MDF3jxEREREREREREREREREREQAD
        dwMHAREX8REQADeAAwADEREREREREREREREREREXB4c3AXMHcRfxERAwB4CAAHdxERERERERERERERER
        ERAAABc3cPcRF/EREHCDeAMwh3EREREREREREREREREQBwADd3AAcXEX8RERdwCHcAADcRERERERERER
        ERERF3eABzgAAACBgRjxERE3M4hwAAAIERERERERERERERERAAAwcIAHCPERGPERET8HhwAAgABxERER
        EREREREREwBwA3d3MAdx8REY8RERF4d3MXAIcABxERERERERERERBwAH+BAHcYFxERjxEREREXd/8AB3
        AAFxEREREREREXcQMAAANzgRgRERGPEREREREQh4CAAHAAB3gRERETNwAABzdwcXHxEREREY8RERERER
        EX8Xd3h3AAAAcAdwAAADB393fxEYERERERjxERERERERERETAHiHcAAAAAAQd3d3CIF3ERERERERGPER
        ERERERERERGPiAOPgH+AiAiHgIh3EXEREREREREY8REREREREREREREXiHB4cIh3hwiIgXERcRERERER
        ERjxERERERERERERERERGHcPdziAiBgRERERERERERERGIcREREREREREREREREREXERgRcRMRERERER
        EREREREfeBERERERERERERERERERERERERERERERERERERERER8PERERERERERERERERERERERERERER
        ERERERERERER+Af4dxERERERERERERERERERERERERERERERERERF4/wAAeP////////////////////
        ////////////////gADgAAAAAAAAB8AAAAAAAAABgAAAAAAAAAGAAAAAAAAAAIAAAAAAAAAAgAAAAAAA
        AACAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAABwAAAAAAAAAP8AAAAAAAAPw==
</value>
  </data>
</root>